#!/bin/bash
set -eu

TESTDIR=$(readlink -f $(dirname $0))
. $TESTDIR/framework

setupenvironment

buildpackage 'conflicting-package-distupgrade'
buildpackage 'conflicting-package-one'
buildpackage 'conflicting-package-two'
buildpackage 'missing-dependency'
buildpackage 'simple-package-new'
buildpackage 'simple-package-noarch'
buildpackage 'simple-package'
buildpackage 'simple-package-update-conflict'
buildpackage 'simple-package-update' # overwrites the previous built package

generaterepository_and_switch_sources "$TMPWORKINGDIRECTORY/usr/src/RPM/RPMS"

testsuccess aptget update

# useful regexes:
readonly NL=$'\n'
readonly ANY="[^$NL]"
readonly FNAME="[^/$NL]+"

set_regex_quote_str() {
	local -r regex_var="$1"; shift
	local -r str="$1"; shift

	# FIXME: %q is not the correct quotation for regexes.
	if [ -n "$str" ]; then
		printf -v "$regex_var" '%q' "$str"
	else
		# workaround a problem of %q
		printf -v "$regex_var" ''
	fi
}

# paths occuring many times:
case "$APT_TEST_METHOD" in
	cdrom*)
		readonly ENCODED_URI_RE="Distribution[^/_$NL]+Disk"
		readonly SITE_RE="Distribution$ANY+Disk"
		;;
	http*)
		readonly ENCODED_URI_RE='localhost(:[0-9]+)?'
		set_regex_quote_str SITE_RE 'localhost'
		readonly SITE_RE
		;;
	*)
		readonly ENCODED_URI_RE="${FNAME}_usr_src_RPM_REPO"
		set_regex_quote_str SITE_RE ''
		readonly SITE_RE
		;;
esac
readonly NOARCH_PKGLIST="/$ANY*/rootdir/var/lib/apt/lists/${ENCODED_URI_RE}_noarch_base_pkglist\.apt-tests"
readonly MYARCH_PKGLIST="/$ANY*/rootdir/var/lib/apt/lists/${ENCODED_URI_RE}_[^/_$NL]+_base_pkglist\.apt-tests"

readonly -a dump_pkgs=(
	"Package: conflicting-package-two
 Version: 1-alt1@[0-9]+
     File: $MYARCH_PKGLIST
  Depends: conflicting-package-one \(null\)"

	"Package: no-such-package"

	"Package: simple-package-noarch
 Version: 1-alt1@[0-9]+
     File: $NOARCH_PKGLIST"

	"Package: simple-package-new
 Version: 3-alt1@[0-9]+
     File: $MYARCH_PKGLIST
  Depends: simple-package 3-alt1
  Depends: simple-package 3-alt1"

	"Package: missing-dependency
 Version: 1-alt1@[0-9]+
     File: $MYARCH_PKGLIST
  Depends: no-such-package \(null\)"

	"Package: simple-package
 Version: 2-alt1@[0-9]+
     File: $MYARCH_PKGLIST
 Version: 1-alt1@[0-9]+
     File: $MYARCH_PKGLIST"

	"Package: conflicting-package-one
 Version: 2-alt1@[0-9]+
     File: $MYARCH_PKGLIST
  Depends: conflicting-package-two \(null\)
  Depends: simple-package \(null\)
 Version: 1-alt1@[0-9]+
     File: $MYARCH_PKGLIST
  Depends: conflicting-package-two \(null\)"

)

if [ -n "$APT_TEST_GPGPUBKEY" ]; then
	dump_with_gpgpubkey=(
		"Package: gpg\($ANY*@$ANY*\)"

		"Package: gpg\($ANY*\)"

		"Package: gpg-pubkey
 Version: [^-$NL]*-[^-$NL]*@[0-9]+
     File: /$ANY*/var/lib/rpm/Packages"

	)
else
	dump_with_gpgpubkey=()
fi
readonly -a dump_with_gpgpubkey

readonly dump_rpmdb="File: /$ANY*/var/lib/rpm/Packages
 Type: RPM Database
 Size: [0-9]+
 ID: 2
 Flags: 1
 Time: $ANY*
 Archive: \(null\)
 Component: \(null\)
 Version: \(null\)
 Origin: \(null\)
 Site:[ ]
 Label: \(null\)
 Architecture: \(null\)"

case "$APT_TEST_METHOD" in
	cdrom_missing_release)
		readonly -a dump_lists=(
			"File: $NOARCH_PKGLIST
 Type: RPM Package Index
 Size: [0-9]+
 ID: [01]
 Flags: 0
 Time: $ANY*
 Archive: \(null\)
 Component: \(null\)
 Version: \(null\)
 Origin: \(null\)
 Site: $SITE_RE
 Label: \(null\)
 Architecture: \(null\)"

			"File: $MYARCH_PKGLIST
 Type: RPM Package Index
 Size: [0-9]+
 ID: [01]
 Flags: 0
 Time: $ANY*
 Archive: \(null\)
 Component: \(null\)
 Version: \(null\)
 Origin: \(null\)
 Site: $SITE_RE
 Label: \(null\)
 Architecture: \(null\)"

		)
		;;
	*)
		readonly -a dump_lists=(
			"File: $NOARCH_PKGLIST
 Type: RPM Package Index
 Size: [0-9]+
 ID: [01]
 Flags: 0
 Time: $ANY*
 Archive: ALT Linux apt-tests
 Component: apt-tests
 Version: [0-9]+
 Origin: ALT Linux Team
 Site: $SITE_RE
 Label: apt-tests
 Architecture: noarch"

			"File: $MYARCH_PKGLIST
 Type: RPM Package Index
 Size: [0-9]+
 ID: [01]
 Flags: 0
 Time: $ANY*
 Archive: ALT Linux apt-tests
 Component: apt-tests
 Version: [0-9]+
 Origin: ALT Linux Team
 Site: $SITE_RE
 Label: apt-tests
 Architecture: $APT_TEST_USED_ARCH"

		)
		;;
esac

testpartsexhaust 'Using Versioning System: Standard \.rpm' \
				 "${dump_pkgs[@]}" \
				 "${dump_with_gpgpubkey[@]}" \
				 "$dump_rpmdb" \
				 "${dump_lists[@]}" \
-- aptcache dump
